"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_omdb_ts"],{

/***/ "(app-pages-browser)/./lib/omdb.ts":
/*!*********************!*\
  !*** ./lib/omdb.ts ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchMovieData: function() { return /* binding */ fetchMovieData; },\n/* harmony export */   fetchMultipleMovieData: function() { return /* binding */ fetchMultipleMovieData; }\n/* harmony export */ });\nconst OMDB_API_KEY = \"5355b7e0\";\nconst OMDB_BASE_URL = \"https://www.omdbapi.com\";\nconst fetchMovieData = async (title, year)=>{\n    if (!OMDB_API_KEY) {\n        console.warn(\"OMDB API key not provided. Movie posters and metadata will not be available.\");\n        return null;\n    }\n    try {\n        var _data_Ratings_find, _data_Ratings;\n        const searchTitle = encodeURIComponent(title);\n        const yearParam = year ? \"&y=\".concat(year) : \"\";\n        const url = \"\".concat(OMDB_BASE_URL, \"/?apikey=\").concat(OMDB_API_KEY, \"&t=\").concat(searchTitle).concat(yearParam, \"&plot=short\");\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.Response === \"False\") {\n            console.warn(\"Movie not found: \".concat(title, \" (\").concat(year, \")\"));\n            return null;\n        }\n        return {\n            title: data.Title,\n            year: parseInt(data.Year),\n            genre: data.Genre ? data.Genre.split(\", \").map((g)=>g.trim()) : [],\n            plot: data.Plot || \"No description available\",\n            poster: data.Poster !== \"N/A\" ? data.Poster : undefined,\n            imdbRating: data.imdbRating !== \"N/A\" ? data.imdbRating : undefined,\n            rottenTomatoes: (_data_Ratings = data.Ratings) === null || _data_Ratings === void 0 ? void 0 : (_data_Ratings_find = _data_Ratings.find((r)=>r.Source === \"Rotten Tomatoes\")) === null || _data_Ratings_find === void 0 ? void 0 : _data_Ratings_find.Value,\n            director: data.Director || \"Unknown\",\n            actors: data.Actors || \"Unknown\"\n        };\n    } catch (error) {\n        console.error(\"Error fetching movie data:\", error);\n        return null;\n    }\n};\nconst fetchMultipleMovieData = async (recommendations)=>{\n    const promises = recommendations.map((rec)=>fetchMovieData(rec.title, rec.year));\n    const results = await Promise.all(promises);\n    return results.filter((movie)=>movie !== null);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9vbWRiLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsTUFBTUEsZUFBZUMsVUFBb0M7QUFDekQsTUFBTUcsZ0JBQWdCO0FBRWYsTUFBTUMsaUJBQWlCLE9BQU9DLE9BQWVDO0lBQ2xELElBQUksQ0FBQ1AsY0FBYztRQUNqQlEsUUFBUUMsSUFBSSxDQUFDO1FBQ2IsT0FBTztJQUNUO0lBRUEsSUFBSTtZQW9CZ0JDLG9CQUFBQTtRQW5CbEIsTUFBTUMsY0FBY0MsbUJBQW1CTjtRQUN2QyxNQUFNTyxZQUFZTixPQUFPLE1BQVcsT0FBTEEsUUFBUztRQUN4QyxNQUFNTyxNQUFNLEdBQTRCZCxPQUF6QkksZUFBYyxhQUE2Qk8sT0FBbEJYLGNBQWEsT0FBbUJhLE9BQWRGLGFBQXdCLE9BQVZFLFdBQVU7UUFFbEYsTUFBTUUsV0FBVyxNQUFNQyxNQUFNRjtRQUM3QixNQUFNSixPQUFPLE1BQU1LLFNBQVNFLElBQUk7UUFFaEMsSUFBSVAsS0FBS1EsUUFBUSxLQUFLLFNBQVM7WUFDN0JWLFFBQVFDLElBQUksQ0FBQyxvQkFBOEJGLE9BQVZELE9BQU0sTUFBUyxPQUFMQyxNQUFLO1lBQ2hELE9BQU87UUFDVDtRQUVBLE9BQU87WUFDTEQsT0FBT0ksS0FBS1MsS0FBSztZQUNqQlosTUFBTWEsU0FBU1YsS0FBS1csSUFBSTtZQUN4QkMsT0FBT1osS0FBS2EsS0FBSyxHQUFHYixLQUFLYSxLQUFLLENBQUNDLEtBQUssQ0FBQyxNQUFNQyxHQUFHLENBQUMsQ0FBQ0MsSUFBY0EsRUFBRUMsSUFBSSxNQUFNLEVBQUU7WUFDNUVDLE1BQU1sQixLQUFLbUIsSUFBSSxJQUFJO1lBQ25CQyxRQUFRcEIsS0FBS3FCLE1BQU0sS0FBSyxRQUFRckIsS0FBS3FCLE1BQU0sR0FBR0M7WUFDOUNDLFlBQVl2QixLQUFLdUIsVUFBVSxLQUFLLFFBQVF2QixLQUFLdUIsVUFBVSxHQUFHRDtZQUMxREUsY0FBYyxHQUFFeEIsZ0JBQUFBLEtBQUt5QixPQUFPLGNBQVp6QixxQ0FBQUEscUJBQUFBLGNBQWMwQixJQUFJLENBQUMsQ0FBQ0MsSUFBV0EsRUFBRUMsTUFBTSxLQUFLLGdDQUE1QzVCLHlDQUFBQSxtQkFBZ0U2QixLQUFLO1lBQ3JGQyxVQUFVOUIsS0FBSytCLFFBQVEsSUFBSTtZQUMzQkMsUUFBUWhDLEtBQUtpQyxNQUFNLElBQUk7UUFDekI7SUFDRixFQUFFLE9BQU9DLE9BQU87UUFDZHBDLFFBQVFvQyxLQUFLLENBQUMsOEJBQThCQTtRQUM1QyxPQUFPO0lBQ1Q7QUFDRixFQUFFO0FBRUssTUFBTUMseUJBQXlCLE9BQU9DO0lBQzNDLE1BQU1DLFdBQVdELGdCQUFnQnJCLEdBQUcsQ0FBQ3VCLENBQUFBLE1BQU8zQyxlQUFlMkMsSUFBSTFDLEtBQUssRUFBRTBDLElBQUl6QyxJQUFJO0lBQzlFLE1BQU0wQyxVQUFVLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQ0o7SUFDbEMsT0FBT0UsUUFBUUcsTUFBTSxDQUFDLENBQUNDLFFBQThCQSxVQUFVO0FBQ2pFLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL29tZGIudHM/MDhlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb3ZpZURhdGEgfSBmcm9tICdAL3R5cGVzJztcblxuY29uc3QgT01EQl9BUElfS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfT01EQl9BUElfS0VZO1xuY29uc3QgT01EQl9CQVNFX1VSTCA9ICdodHRwczovL3d3dy5vbWRiYXBpLmNvbSc7XG5cbmV4cG9ydCBjb25zdCBmZXRjaE1vdmllRGF0YSA9IGFzeW5jICh0aXRsZTogc3RyaW5nLCB5ZWFyPzogbnVtYmVyKTogUHJvbWlzZTxNb3ZpZURhdGEgfCBudWxsPiA9PiB7XG4gIGlmICghT01EQl9BUElfS0VZKSB7XG4gICAgY29uc29sZS53YXJuKCdPTURCIEFQSSBrZXkgbm90IHByb3ZpZGVkLiBNb3ZpZSBwb3N0ZXJzIGFuZCBtZXRhZGF0YSB3aWxsIG5vdCBiZSBhdmFpbGFibGUuJyk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHNlYXJjaFRpdGxlID0gZW5jb2RlVVJJQ29tcG9uZW50KHRpdGxlKTtcbiAgICBjb25zdCB5ZWFyUGFyYW0gPSB5ZWFyID8gYCZ5PSR7eWVhcn1gIDogJyc7XG4gICAgY29uc3QgdXJsID0gYCR7T01EQl9CQVNFX1VSTH0vP2FwaWtleT0ke09NREJfQVBJX0tFWX0mdD0ke3NlYXJjaFRpdGxlfSR7eWVhclBhcmFtfSZwbG90PXNob3J0YDtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgaWYgKGRhdGEuUmVzcG9uc2UgPT09ICdGYWxzZScpIHtcbiAgICAgIGNvbnNvbGUud2FybihgTW92aWUgbm90IGZvdW5kOiAke3RpdGxlfSAoJHt5ZWFyfSlgKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICB0aXRsZTogZGF0YS5UaXRsZSxcbiAgICAgIHllYXI6IHBhcnNlSW50KGRhdGEuWWVhciksXG4gICAgICBnZW5yZTogZGF0YS5HZW5yZSA/IGRhdGEuR2VucmUuc3BsaXQoJywgJykubWFwKChnOiBzdHJpbmcpID0+IGcudHJpbSgpKSA6IFtdLFxuICAgICAgcGxvdDogZGF0YS5QbG90IHx8ICdObyBkZXNjcmlwdGlvbiBhdmFpbGFibGUnLFxuICAgICAgcG9zdGVyOiBkYXRhLlBvc3RlciAhPT0gJ04vQScgPyBkYXRhLlBvc3RlciA6IHVuZGVmaW5lZCxcbiAgICAgIGltZGJSYXRpbmc6IGRhdGEuaW1kYlJhdGluZyAhPT0gJ04vQScgPyBkYXRhLmltZGJSYXRpbmcgOiB1bmRlZmluZWQsXG4gICAgICByb3R0ZW5Ub21hdG9lczogZGF0YS5SYXRpbmdzPy5maW5kKChyOiBhbnkpID0+IHIuU291cmNlID09PSAnUm90dGVuIFRvbWF0b2VzJyk/LlZhbHVlLFxuICAgICAgZGlyZWN0b3I6IGRhdGEuRGlyZWN0b3IgfHwgJ1Vua25vd24nLFxuICAgICAgYWN0b3JzOiBkYXRhLkFjdG9ycyB8fCAnVW5rbm93bidcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIG1vdmllIGRhdGE6JywgZXJyb3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZmV0Y2hNdWx0aXBsZU1vdmllRGF0YSA9IGFzeW5jIChyZWNvbW1lbmRhdGlvbnM6IEFycmF5PHt0aXRsZTogc3RyaW5nLCB5ZWFyOiBudW1iZXJ9Pik6IFByb21pc2U8TW92aWVEYXRhW10+ID0+IHtcbiAgY29uc3QgcHJvbWlzZXMgPSByZWNvbW1lbmRhdGlvbnMubWFwKHJlYyA9PiBmZXRjaE1vdmllRGF0YShyZWMudGl0bGUsIHJlYy55ZWFyKSk7XG4gIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbChwcm9taXNlcyk7XG4gIHJldHVybiByZXN1bHRzLmZpbHRlcigobW92aWUpOiBtb3ZpZSBpcyBNb3ZpZURhdGEgPT4gbW92aWUgIT09IG51bGwpO1xufTtcbiJdLCJuYW1lcyI6WyJPTURCX0FQSV9LRVkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfT01EQl9BUElfS0VZIiwiT01EQl9CQVNFX1VSTCIsImZldGNoTW92aWVEYXRhIiwidGl0bGUiLCJ5ZWFyIiwiY29uc29sZSIsIndhcm4iLCJkYXRhIiwic2VhcmNoVGl0bGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ5ZWFyUGFyYW0iLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwianNvbiIsIlJlc3BvbnNlIiwiVGl0bGUiLCJwYXJzZUludCIsIlllYXIiLCJnZW5yZSIsIkdlbnJlIiwic3BsaXQiLCJtYXAiLCJnIiwidHJpbSIsInBsb3QiLCJQbG90IiwicG9zdGVyIiwiUG9zdGVyIiwidW5kZWZpbmVkIiwiaW1kYlJhdGluZyIsInJvdHRlblRvbWF0b2VzIiwiUmF0aW5ncyIsImZpbmQiLCJyIiwiU291cmNlIiwiVmFsdWUiLCJkaXJlY3RvciIsIkRpcmVjdG9yIiwiYWN0b3JzIiwiQWN0b3JzIiwiZXJyb3IiLCJmZXRjaE11bHRpcGxlTW92aWVEYXRhIiwicmVjb21tZW5kYXRpb25zIiwicHJvbWlzZXMiLCJyZWMiLCJyZXN1bHRzIiwiUHJvbWlzZSIsImFsbCIsImZpbHRlciIsIm1vdmllIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/omdb.ts\n"));

/***/ })

}]);